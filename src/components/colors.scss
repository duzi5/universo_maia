$primary_color: #0b022a;
$secundary_color: #dccece;
$tertiary_color: #0a1b42;
$quaternary_color: #5ea1c3;
$quinary_color: #ba0c54;
@import 'node_modules/normalize.css/normalize';
@import url('https://fonts.googleapis.com/css2?family=Amatic+SC:wght@400;700&family=Autour+One&family=Barrio&family=Bebas+Neue&family=Bungee&family=Chelsea+Market&family=Covered+By+Your+Grace&family=Eczar:wght@400;500;600;700;800&family=Kablammo&family=Kranky&family=Lacquer&family=Libre+Barcode+128+Text&family=Libre+Barcode+39+Text&family=Luckiest+Guy&family=Major+Mono+Display&family=Monoton&family=Noto+Sans+Linear+B&family=Paytone+One&family=Ribeye&family=Rubik+Distressed&family=Rubik+Microbe&family=Rubik+Moonrocks&family=Ruslan+Display&family=Ultra&display=swap');
$font1: 'Luckiest Guy';
$font2: 'Chelsea Market';

$breakpoints: (
  small: 480px,
  medium: 767px,
  large: 1023px,
  xlarge: 1199px
);

@mixin breakpoint($point) {
    @if map-has-key($breakpoints, $point) {
        @if $point == small {
            @media (max-width: map-get($breakpoints, $point)) {
                @content;
            }
        } @else if $point == medium {
            @media (min-width: map-get($breakpoints, small) + 1px) and (max-width: map-get($breakpoints, $point)) {
                @content;
            }
        } @else if $point == large {
            @media (min-width: map-get($breakpoints, medium) + 1px) and (max-width: map-get($breakpoints, $point)) {
                @content;
            }
        } @else if $point == xlarge {
            @media (min-width: map-get($breakpoints, large) + 1px)  {
                @content;
            }
        }
    } @else {
        @warn "Breakpoint '#{$point}' n√£o encontrado.";
    }
}
